name: Build and deploy WASM demo

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: "Build and deploy"
    env:
      workspace_root: '/home/runner/work/QML-Spatial-UI/QML-Spatial-UI'
      qt_version: '6.6.0'
      emsdk_version: '3.1.37'
      qt_modules: 'qtquick3d qtshadertools'
      qt_root: '/home/runner/work/QML-Spatial-UI/QML-Spatial-UI/Qt'
      target_folder: 'qml-spatial-ui'
      source_folder: '/home/kidev/work/QML-Spatial-UI/QML-Spatial-UI/build/example'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: 'recursive'
          lfs: 'true'

      - name: Install tools
        shell: bash
        run: |
          sudo apt update
          sudo apt-get -y install build-essential libgl1-mesa-dev curl python3 python3-venv
          sudo apt-get -y install jq lftp
          sudo apt-get -y install libc++-dev
          sudo apt-get -y install libc++abi-dev
          sudo apt-get -y install libc6-dev
          sudo apt-get -y install expect
          sudo apt-get -y install qtchooser libgl-dev libxcb-cursor0 libmuparser-dev libboost-dev librsvg2-bin libfreetype6-dev libicu-dev pkg-config libfuse2
          sudo apt-get -y install lsb-release wget software-properties-common gnupg expect git-lfs
          sudo apt-get -y install libgl-dev libglu1-mesa-dev libxmu-dev libxi-dev libgl-dev

      - name: Update CMake
        uses: lukka/get-cmake@latest

      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Install Qt gcc_64
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ env.qt_version }}
          host: 'linux'
          target: 'desktop'
          set-env: 'false'
          arch: 'gcc_64'
          dir: ${{ env.workspace_root }}
          modules: ${{ env.qt_modules }}
          cache: 'true'
          cache-key-prefix: "install-qt-gcc"

      - name: Install Qt wasm_multithread
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{ env.qt_version }}
          host: 'linux'
          target: 'desktop'
          set-env: 'true'
          arch: 'wasm_multithread'
          dir: ${{ env.workspace_root }}
          modules: ${{ env.qt_modules }}
          cache: 'true'
          cache-key-prefix: "install-qt-wasm"

      - name: CMake Build
        shell: bash
        run: |
          make web QT_ROOT=${{ env.qt_root }} QT_VERSION=${{ env.qt_version }} EMSDK_VERSION=${{ env.emsdk_version }}

      - name: Upload to FTP
        shell: bash
        run: |
          lftp -u "${{ secrets.FTP_UPLOAD_USER }}","${{ secrets.FTP_UPLOAD_PW }}" ${{ secrets.FTP_UPLOAD_IP }} <<EOF
          mirror -R --only-newer --verbose ${{ env.source_folder }} ${{ env.target_folder }}
          quit
          EOF

